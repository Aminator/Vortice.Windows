trigger:
- master

pool:
  vmImage: windows-2019

variables:
  solution: 'src/Vortice.Windows.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: DotNetCoreInstaller@0
  displayName: 'DotNetCore Installer'
  inputs:
    version: '2.1.403'

- task: NuGetToolInstaller@0
  displayName: 'NuGet Installer'

- task: NuGetCommand@2
  displayName: 'NuGet restore'
  inputs:
    restoreSolution: '$(solution)'
    feedsToUse: config

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: MSBuild@1
  inputs:
    solution: 'src/Vortice.DirectX/Vortice.DirectX.csproj'
    msbuildArguments: '/t:pack /p:Configuration=Release'

- task: MSBuild@1
  inputs:
    solution: 'src/Vortice.DirectX.Direct3D11/Vortice.DirectX.Direct3D11.csproj'
    msbuildArguments: '/t:pack /p:Configuration=Release'

- task: MSBuild@1
  inputs:
    solution: 'src/Vortice.DirectX.Direct3D12/Vortice.DirectX.Direct3D12.csproj'
    msbuildArguments: '/t:pack /p:Configuration=Release'

- task: MSBuild@1
  inputs:
    solution: 'src/Vortice.DirectX.Direct2D/Vortice.DirectX.Direct2D.csproj'
    msbuildArguments: '/t:pack /p:Configuration=Release'  

- task: MSBuild@1
  inputs:
    solution: 'src/Vortice.DirectX.ShaderCompiler/Vortice.DirectX.ShaderCompiler.csproj'
    msbuildArguments: '/t:pack /p:Configuration=Release'  

- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.SourcesDirectory)/bin/Release/Packages'
    artifactName: 'NuGet'
  condition: succeeded()

- task: NuGetCommand@2
  inputs:
    command: push
    packagesToPush: '$(Build.SourcesDirectory)/bin/Release/**/*.nupkg;!$(Build.SourcesDirectory)/bin/Release/**/*.symbols.nupkg'
    nuGetFeedType: internal
    publishVstsFeed: 'amerkoleci'
